name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Poetry
      run: pip install --no-cache-dir poetry

    - name: Install Dependencies
      run: poetry install

    - name: Run Pre-Commit Hooks
      run: poetry run pre-commit run --all-files

  build-and-deploy:
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'pull_request' && github.base_ref == 'master' && success()
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Debug AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-central-1
      run: |
        echo "AWS_ACCESS_KEY_ID starts with: ${AWS_ACCESS_KEY_ID}"
        echo "AWS_SECRET_ACCESS_KEY is set: ${AWS_SECRET_ACCESS_KEY}"
        echo "AWS_REGION is set: ${AWS_REGION}"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-central-1

    - name: Build, Tag, and Push Docker Image
      run: |
        # Set variables
        REPO_NAME="fastapi-ecs-repo"
        IMAGE_TAG=${{ github.sha }}
        AWS_REGION=${{ secrets.AWS_REGION }}
        ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)

        # Build and tag the Docker image
        docker build -t $REPO_NAME:$IMAGE_TAG .
        docker tag $REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG

        # Push the image to Amazon ECR
        docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG

    - name: Update ECS Service
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # Set variables
        CLUSTER_NAME=fastapi-ecs-cluster
        SERVICE_NAME=fastapi-ecs-service
        IMAGE_TAG=${{ github.sha }}
        AWS_REGION=${{ secrets.AWS_REGION }}
        ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG

        # Update ECS service with the new image
        aws ecs update-service \
          --cluster $CLUSTER_NAME \
          --service $SERVICE_NAME \
          --force-new-deployment \
          --region $AWS_REGION
